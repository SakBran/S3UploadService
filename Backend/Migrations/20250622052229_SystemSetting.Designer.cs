// <auto-generated />
using API.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250622052229_SystemSetting")]
    partial class SystemSetting
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.Model.TokenModel", b =>
                {
                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Permission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Token");

                    b.ToTable("TokenModels");
                });

            modelBuilder.Entity("API.Model.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Permission")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Backend.Model.SystemSetting", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AppSecret")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AyaEnquiryURl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BucketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExtensionPeriodInDays")
                        .HasColumnType("int");

                    b.Property<decimal>("IMAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MOCAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MerchantId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MpuUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OnlineFees")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RegistrationYear")
                        .HasColumnType("int");

                    b.Property<string>("S3Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("S3accessKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("S3secretKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecretKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("smsApiUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("smsPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("smsUsername")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SystemSetting");
                });
#pragma warning restore 612, 618
        }
    }
}
